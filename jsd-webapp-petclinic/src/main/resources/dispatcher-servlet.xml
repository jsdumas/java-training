<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:security="http://www.springframework.org/schema/security"

	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
						   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
						   http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
						   http://www.springframework.org/schema/aop
							http://www.springframework.org/schema/aop/spring-aop.xsd
						   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">



	<context:annotation-config />
	<context:component-scan base-package="fr.treeptik" />

	<mvc:annotation-driven />

	<mvc:view-controller path="/login.do" view-name="../login" />


	<jpa:repositories base-package="fr.treeptik.petclinic.dao" />

	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:init-db.sql" />
	</jdbc:initialize-database>

	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>

	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />


	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>



	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="fr.treeptik.petclinic.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
			</bean>
		</property>
	</bean>
	<tx:annotation-driven />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- treeptik.petclinic@gmail.com -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="treeptik.petclinic" />
		<property name="password" value="Admin0Admin0" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<task:annotation-driven executor="emailExecutor"
		scheduler="emailScheduler" />
	<task:executor id="emailExecutor" pool-size="1" />
	<task:scheduler id="emailScheduler" pool-size="1" />

	<context:property-placeholder location="classpath:swagger.properties" />


	<!-- Serve static content -->
	<mvc:default-servlet-handler />
	<!-- Direct static mappings -->
	<!-- <mvc:resources mapping="*.html" location="/" /> -->
	<bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />

	<security:http pattern="/bower_components/**" security="none" />
	<security:http pattern="/dist/**" security="none" />
	<security:http pattern="/js/**" security="none" />
	<security:http pattern="/less/**" security="none" />
	<security:http pattern="/login.do" security="none" />


	<security:http auto-config='true'>

		<security:intercept-url pattern="/proprietaire/edit.do"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/proprietaire/remove.do*"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/proprietaire/update.do*"
			access="hasRole('ADMIN')" />

		<security:intercept-url pattern="/animal/edit.do*"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/animal/remove.do*"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/animal/update.do*"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/export/export.do*"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/**"
			access="hasRole('USER') or hasRole('ADMIN')" />

		<security:form-login login-page="/login.do"
			default-target-url="/index.do" />
		<security:csrf disabled="true" />
		<security:logout invalidate-session="true"
			logout-success-url="/login.do" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="
  select email, password, id from Proprietaire p Where p.email=?"
				authorities-by-username-query="
  select email, role from Proprietaire p where p.email=?" />
		</security:authentication-provider>

		<security:authentication-provider>
			<security:user-service>
				<security:user name="admin" password="admin"
					authorities="ROLE_USER, ROLE_ADMIN" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:global-method-security
		secured-annotations="enabled"></security:global-method-security>

	<bean id="messageAspect" class="fr.treeptik.petclinic.aop.MessageAspect">
	</bean>

	<aop:config>
		<aop:aspect id="myMessageAspect" ref="messageAspect">
			<aop:pointcut id="serviceCreatePointCut"
				expression="execution(* fr.treeptik.petclinic.service.*.save(..))" />
			<aop:after-returning pointcut-ref="serviceCreatePointCut"
				method="afterServiceCreate" returning="mResult" />

			<aop:pointcut id="serviceRemovePointCut"
				expression="execution(* fr.treeptik.petclinic.service.*.remove(..))" />
			<aop:after pointcut-ref="serviceRemovePointCut" method="afterServiceRemove" />

			<aop:pointcut id="serviceUpdatePointCut"
				expression="execution(* fr.treeptik.petclinic.service.*.update(..))" />
			<aop:after-returning pointcut-ref="serviceUpdatePointCut"
				method="afterServiceUpdate" returning="result" />

		</aop:aspect>
	</aop:config>


</beans>
