<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/lang
	http://www.springframework.org/schema/lang/spring-lang.xsd

	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd

	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<!-- Déclaration des beans pour une config XML -->
	<!-- <bean id="personneDAO" class="fr.treeptik.dao.impl.PersonneMemoryDAO"></bean> -->
	<!-- <bean id="personneService" class="fr.treeptik.service.PersonneService"> -->
	<!-- <property name="personneDAO" ref="personneDAO"></property> -->
	<!-- </bean> -->


	<!-- Pour les annotations -->
	<context:component-scan base-package="io.jsd.training.tp.spring" />

	<!-- Class path pour accéder au fichier config properties -->
	<util:properties id="config" location="classpath:config.properties" />
	<!-- <util:properties id="log4j" location="classpath:log4j.xml" /> -->



	<!-- Recherche le script init sql dans les resources -->
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:init.sql" />
	</jdbc:initialize-database>

	<!-- AOP -->
	<bean id="monitorAspect" class="io.jsd.training.tp.spring.aop.MonitorAspect" />
	<bean id="dataBaseNotifification" class="io.jsd.training.tp.spring.aop.DataBaseNotification" />


	<aop:config>
		<aop:aspect id="myAspect" ref="monitorAspect">

			<!-- Déclaration du Point cut -->
<!-- 			<aop:pointcut id="clientSavePointCut" -->
<!-- 				expression="execution(* fr.treeptik.service.*.save(fr.treeptik.model.Client)) " /> -->
<aop:pointcut id="MethodeServicePointCut"
				expression="execution(* io.jsd.training.tp.spring.service.*.*(..)) &amp;&amp; !execution(* io.jsd.training.tp.spring.service.MessageService.*(..))) " />
			<!-- Etoile au début = tout type de retour -->
			<!-- expression="execution(* fr.treeptik.*.*.save(..)) " -->

			<aop:after-returning pointcut-ref="MethodeServicePointCut"
				method="afterReturningMethode" returning="result" />
			<aop:before method="beforeMethode" pointcut-ref="MethodeServicePointCut" />
			<!-- <aop:after-throwing method="onErrorSavePersonne" throwing="e" pointcut-ref="personneSavePointCut"/> -->

		</aop:aspect>
		
		
		
		<aop:aspect id="notification" ref="dataBaseNotifification">
			<aop:pointcut expression="execution(* io.jsd.training.tp.spring.service.*.save(..)) &amp;&amp; !execution(* io.jsd.training.tp.spring.service.MessageService.*(..))" id="savePointCut"/>
			<aop:after-returning pointcut-ref="savePointCut" method="afterReturningSave" returning="result"/>
		</aop:aspect>
	</aop:config>



	<!-- Connection à la BDD -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>


	<!-- Implémentation de l'ORM pour JPA -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- Indiquer l'endroit ou se trouve les entity du projet -->
		<property name="packagesToScan" value="io.jsd.training.tp.spring.dao.entity" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
			</bean>
		</property>
	</bean>


	<!-- Récupération de la transaction de l'entity manager factory -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />


</beans>
