<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd
	
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	
	http://www.springframework.org/schema/lang
	http://www.springframework.org/schema/lang/spring-lang.xsd
	
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd

	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd

	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd 
	
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- Déclaration des beans pour une config XML -->
	<!-- <bean id="personneDAO" class="fr.treeptik.dao.impl.PersonneMemoryDAO"></bean> -->
	<!-- <bean id="personneService" class="fr.treeptik.service.PersonneService"> -->
	<!-- <property name="personneDAO" ref="personneDAO"></property> -->
	<!-- </bean> -->


	<!-- Pour les annotations -->
	<context:component-scan base-package="fr.treeptik" />
	<mvc:annotation-driven />
	<jpa:repositories base-package="fr.treeptik.dao" />

	<!-- Database -->
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:/initdb.sql"/>
	</jdbc:initialize-database>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="fr.treeptik.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<!-- Mettre true pour etre en create/update et false pour validate -->
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
			</bean>
		</property>
	</bean>


	<!-- Messages (internationalisation) -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basenames">
			<list>
				<value>messages</value>
				<!-- <value>format</value> -->
				<!-- <value>exceptions</value> -->
				<!-- <value>windows</value> -->
			</list>
		</property>
	</bean>



	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<tx:annotation-driven transaction-manager="transactionManager" />


	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />



	<!-- SPRING SECURITY -->
	
	<security:global-method-security secured-annotations="enabled"/>

	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/login.jsp" security="none" />

	<security:http>

		<security:intercept-url pattern="/**"
			access="hasRole('ADMIN')" />

		<security:intercept-url pattern="/**"
			access="hasRole('USER')" />

		<security:form-login login-page="/login.jsp" />
		<!-- génère une clé pour chaque page pour être sur qu'un serveur externe 
			ne s'insère pas au milieu (faille xss) -->
		<security:csrf disabled="true" />
		<security:logout invalidate-session="true"
			logout-success-url="/client/edit.do" />
	</security:http>

	

	<security:authentication-manager>
	
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select login, password, enabled from User where login=?"
			authorities-by-username-query="select u.login, r.roles from User u 
										join User_roles r on r.User_login=u.login
										where u.login=?"/>
		</security:authentication-provider>
	
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user1" password="aa"
					authorities="ROLE_USER, ROLE_ADMIN" />
				<security:user name="user2" password="aa" authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>


</beans>
